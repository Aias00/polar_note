[36mDEBUG[0m 17:51:34  revel   i18n.go:185: Importing messages from module:           [36msection[0m=i18n [36mimportpath[0m= 
[36mDEBUG[0m 17:51:34  revel   i18n.go:185: Importing messages from module:           [36msection[0m=i18n [36mimportpath[0m=github.com/revel/modules/static 
[36mDEBUG[0m 17:51:34  revel   i18n.go:185: Importing messages from module:           [36msection[0m=i18n [36mimportpath[0m=github.com/revel/modules/testrunner 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=album.en 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=album.fr 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=album.pt 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=album.zh 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'en'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=blog.en 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'fr'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=blog.fr 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'pt'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=blog.pt 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'zh'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=blog.zh 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'en'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=markdown.en 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'fr'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=markdown.fr 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'pt'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=markdown.pt 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'zh'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=markdown.zh 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'en'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=member.en 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'fr'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=member.fr 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'pt'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=member.pt 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'zh'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=member.zh 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'en'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=msg.en 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'fr'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=msg.fr 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'pt'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=msg.pt 
[36mDEBUG[0m 17:51:34  revel   i18n.go:160: Successfully merged messages for locale 'zh'  [36msection[0m=i18n 
[36mDEBUG[0m 17:51:34  revel   util.go:272: Successfully loaded messages from file    [36msection[0m=i18n [36mfile[0m=msg.zh 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/ action:Index.Default  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=index.default [36mcontroller[0m=index [36mmethod[0m=default 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path index.default for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/", Action:"Index.Default", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:7}   [36msection[0m=router [36mactionPath[0m=index.default [36mcontroller[0m=index [36mmethod[0m=default 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\index.default for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/", Action:"Index.Default", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:7}   [36msection[0m=router [36mactionPath[0m=index.default [36mcontroller[0m=index [36mmethod[0m=default 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note action:Note.Index  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.index [36mcontroller[0m=note [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/note", Action:"Note.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/note", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:8}   [36msection[0m=router [36mactionPath[0m=note.index [36mcontroller[0m=note [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/note", Action:"Note.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/note", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:8}   [36msection[0m=router [36mactionPath[0m=note.index [36mcontroller[0m=note [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/index action:Index.Index  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=index.index [36mcontroller[0m=index [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path index.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/index", Action:"Index.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/index", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:10}   [36msection[0m=router [36mactionPath[0m=index.index [36mcontroller[0m=index [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\index.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/index", Action:"Index.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/index", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:10}   [36msection[0m=router [36mactionPath[0m=index.index [36mcontroller[0m=index [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/login action:Auth.Login  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=auth.login [36mcontroller[0m=auth [36mmethod[0m=login 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path auth.login for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/login", Action:"Auth.Login", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/login", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:12}   [36msection[0m=router [36mactionPath[0m=auth.login [36mcontroller[0m=auth [36mmethod[0m=login 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\auth.login for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/login", Action:"Auth.Login", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/login", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:12}   [36msection[0m=router [36mactionPath[0m=auth.login [36mcontroller[0m=auth [36mmethod[0m=login 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/doLogin action:Auth.DoLogin  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=auth.dologin [36mcontroller[0m=auth [36mmethod[0m=dologin 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path auth.dologin for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"POST", Path:"/doLogin", Action:"Auth.DoLogin", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/POST/doLogin", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:13}   [36msection[0m=router [36mactionPath[0m=auth.dologin [36mcontroller[0m=auth [36mmethod[0m=dologin 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\auth.dologin for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"POST", Path:"/doLogin", Action:"Auth.DoLogin", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/POST/doLogin", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:13}   [36msection[0m=router [36mactionPath[0m=auth.dologin [36mcontroller[0m=auth [36mmethod[0m=dologin 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/logout action:Auth.Logout  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=auth.logout [36mcontroller[0m=auth [36mmethod[0m=logout 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path auth.logout for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/logout", Action:"Auth.Logout", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/logout", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:14}   [36msection[0m=router [36mactionPath[0m=auth.logout [36mcontroller[0m=auth [36mmethod[0m=logout 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\auth.logout for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/logout", Action:"Auth.Logout", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/logout", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:14}   [36msection[0m=router [36mactionPath[0m=auth.logout [36mcontroller[0m=auth [36mmethod[0m=logout 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/demo action:Auth.Demo  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=auth.demo [36mcontroller[0m=auth [36mmethod[0m=demo 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path auth.demo for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/demo", Action:"Auth.Demo", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/demo", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:15}   [36msection[0m=router [36mactionPath[0m=auth.demo [36mcontroller[0m=auth [36mmethod[0m=demo 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\auth.demo for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/demo", Action:"Auth.Demo", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/demo", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:15}   [36msection[0m=router [36mactionPath[0m=auth.demo [36mcontroller[0m=auth [36mmethod[0m=demo 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/register action:Auth.Register  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=auth.register [36mcontroller[0m=auth [36mmethod[0m=register 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path auth.register for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/register", Action:"Auth.Register", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/register", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:17}   [36msection[0m=router [36mactionPath[0m=auth.register [36mcontroller[0m=auth [36mmethod[0m=register 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\auth.register for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/register", Action:"Auth.Register", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/register", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:17}   [36msection[0m=router [36mactionPath[0m=auth.register [36mcontroller[0m=auth [36mmethod[0m=register 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/doRegister action:Auth.DoRegister  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=auth.doregister [36mcontroller[0m=auth [36mmethod[0m=doregister 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path auth.doregister for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"POST", Path:"/doRegister", Action:"Auth.DoRegister", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/POST/doRegister", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:18}   [36msection[0m=router [36mactionPath[0m=auth.doregister [36mcontroller[0m=auth [36mmethod[0m=doregister 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\auth.doregister for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"POST", Path:"/doRegister", Action:"Auth.DoRegister", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/POST/doRegister", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:18}   [36msection[0m=router [36mactionPath[0m=auth.doregister [36mcontroller[0m=auth [36mmethod[0m=doregister 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/findPassword/:token action:Auth.FindPassword2  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=auth.findpassword2 [36mcontroller[0m=auth [36mmethod[0m=findpassword2 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path auth.findpassword2 for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/findPassword/:token", Action:"Auth.FindPassword2", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/findPassword/:token", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:20}   [36msection[0m=router [36mactionPath[0m=auth.findpassword2 [36mcontroller[0m=auth [36mmethod[0m=findpassword2 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\auth.findpassword2 for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/findPassword/:token", Action:"Auth.FindPassword2", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/findPassword/:token", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:20}   [36msection[0m=router [36mactionPath[0m=auth.findpassword2 [36mcontroller[0m=auth [36mmethod[0m=findpassword2 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/findPassword action:Auth.FindPassword  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=auth.findpassword [36mcontroller[0m=auth [36mmethod[0m=findpassword 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path auth.findpassword for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/findPassword", Action:"Auth.FindPassword", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/findPassword", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:21}   [36msection[0m=router [36mactionPath[0m=auth.findpassword [36mcontroller[0m=auth [36mmethod[0m=findpassword 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\auth.findpassword for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/findPassword", Action:"Auth.FindPassword", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/findPassword", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:21}   [36msection[0m=router [36mactionPath[0m=auth.findpassword [36mcontroller[0m=auth [36mmethod[0m=findpassword 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/doFindPassword action:Auth.DoFindPassword  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=auth.dofindpassword [36mcontroller[0m=auth [36mmethod[0m=dofindpassword 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path auth.dofindpassword for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"POST", Path:"/doFindPassword", Action:"Auth.DoFindPassword", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/POST/doFindPassword", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:22}   [36msection[0m=router [36mactionPath[0m=auth.dofindpassword [36mcontroller[0m=auth [36mmethod[0m=dofindpassword 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\auth.dofindpassword for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"POST", Path:"/doFindPassword", Action:"Auth.DoFindPassword", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/POST/doFindPassword", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:22}   [36msection[0m=router [36mactionPath[0m=auth.dofindpassword [36mcontroller[0m=auth [36mmethod[0m=dofindpassword 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/findPasswordUpdate action:Auth.FindPasswordUpdate  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=auth.findpasswordupdate [36mcontroller[0m=auth [36mmethod[0m=findpasswordupdate 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path auth.findpasswordupdate for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"POST", Path:"/findPasswordUpdate", Action:"Auth.FindPasswordUpdate", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/POST/findPasswordUpdate", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:23}   [36msection[0m=router [36mactionPath[0m=auth.findpasswordupdate [36mcontroller[0m=auth [36mmethod[0m=findpasswordupdate 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\auth.findpasswordupdate for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"POST", Path:"/findPasswordUpdate", Action:"Auth.FindPasswordUpdate", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/POST/findPasswordUpdate", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:23}   [36msection[0m=router [36mactionPath[0m=auth.findpasswordupdate [36mcontroller[0m=auth [36mmethod[0m=findpasswordupdate 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/listNotes action:Note.ListNotes  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.listnotes [36mcontroller[0m=note [36mmethod[0m=listnotes 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.listnotes for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/listNotes", Action:"Note.ListNotes", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/listNotes", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:28}   [36msection[0m=router [36mactionPath[0m=note.listnotes [36mcontroller[0m=note [36mmethod[0m=listnotes 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.listnotes for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/listNotes", Action:"Note.ListNotes", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/listNotes", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:28}   [36msection[0m=router [36mactionPath[0m=note.listnotes [36mcontroller[0m=note [36mmethod[0m=listnotes 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/listTrashNotes action:Note.ListTrashNotes  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.listtrashnotes [36mcontroller[0m=note [36mmethod[0m=listtrashnotes 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.listtrashnotes for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/listTrashNotes", Action:"Note.ListTrashNotes", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/listTrashNotes", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:29}   [36msection[0m=router [36mactionPath[0m=note.listtrashnotes [36mcontroller[0m=note [36mmethod[0m=listtrashnotes 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.listtrashnotes for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/listTrashNotes", Action:"Note.ListTrashNotes", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/listTrashNotes", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:29}   [36msection[0m=router [36mactionPath[0m=note.listtrashnotes [36mcontroller[0m=note [36mmethod[0m=listtrashnotes 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/getNoteAndContent action:Note.GetNoteAndContent  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.getnoteandcontent [36mcontroller[0m=note [36mmethod[0m=getnoteandcontent 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.getnoteandcontent for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/getNoteAndContent", Action:"Note.GetNoteAndContent", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/getNoteAndContent", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:30}   [36msection[0m=router [36mactionPath[0m=note.getnoteandcontent [36mcontroller[0m=note [36mmethod[0m=getnoteandcontent 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.getnoteandcontent for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/getNoteAndContent", Action:"Note.GetNoteAndContent", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/getNoteAndContent", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:30}   [36msection[0m=router [36mactionPath[0m=note.getnoteandcontent [36mcontroller[0m=note [36mmethod[0m=getnoteandcontent 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/getNoteContent action:Note.GetNoteContent  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.getnotecontent [36mcontroller[0m=note [36mmethod[0m=getnotecontent 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.getnotecontent for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/getNoteContent", Action:"Note.GetNoteContent", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/getNoteContent", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:31}   [36msection[0m=router [36mactionPath[0m=note.getnotecontent [36mcontroller[0m=note [36mmethod[0m=getnotecontent 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.getnotecontent for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/getNoteContent", Action:"Note.GetNoteContent", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/getNoteContent", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:31}   [36msection[0m=router [36mactionPath[0m=note.getnotecontent [36mcontroller[0m=note [36mmethod[0m=getnotecontent 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/updateNoteOrContent action:Note.UpdateNoteOrContent  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.updatenoteorcontent [36mcontroller[0m=note [36mmethod[0m=updatenoteorcontent 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.updatenoteorcontent for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/updateNoteOrContent", Action:"Note.UpdateNoteOrContent", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/updateNoteOrContent", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:32}   [36msection[0m=router [36mactionPath[0m=note.updatenoteorcontent [36mcontroller[0m=note [36mmethod[0m=updatenoteorcontent 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.updatenoteorcontent for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/updateNoteOrContent", Action:"Note.UpdateNoteOrContent", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/updateNoteOrContent", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:32}   [36msection[0m=router [36mactionPath[0m=note.updatenoteorcontent [36mcontroller[0m=note [36mmethod[0m=updatenoteorcontent 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/deleteNote action:Note.DeleteNote  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.deletenote [36mcontroller[0m=note [36mmethod[0m=deletenote 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.deletenote for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/deleteNote", Action:"Note.DeleteNote", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/deleteNote", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:33}   [36msection[0m=router [36mactionPath[0m=note.deletenote [36mcontroller[0m=note [36mmethod[0m=deletenote 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.deletenote for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/deleteNote", Action:"Note.DeleteNote", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/deleteNote", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:33}   [36msection[0m=router [36mactionPath[0m=note.deletenote [36mcontroller[0m=note [36mmethod[0m=deletenote 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/deleteTrash action:Note.DeleteTrash  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.deletetrash [36mcontroller[0m=note [36mmethod[0m=deletetrash 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.deletetrash for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/deleteTrash", Action:"Note.DeleteTrash", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/deleteTrash", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:34}   [36msection[0m=router [36mactionPath[0m=note.deletetrash [36mcontroller[0m=note [36mmethod[0m=deletetrash 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.deletetrash for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/deleteTrash", Action:"Note.DeleteTrash", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/deleteTrash", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:34}   [36msection[0m=router [36mactionPath[0m=note.deletetrash [36mcontroller[0m=note [36mmethod[0m=deletetrash 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/moveNote action:Note.MoveNote  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.movenote [36mcontroller[0m=note [36mmethod[0m=movenote 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.movenote for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/moveNote", Action:"Note.MoveNote", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/moveNote", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:35}   [36msection[0m=router [36mactionPath[0m=note.movenote [36mcontroller[0m=note [36mmethod[0m=movenote 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.movenote for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/moveNote", Action:"Note.MoveNote", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/moveNote", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:35}   [36msection[0m=router [36mactionPath[0m=note.movenote [36mcontroller[0m=note [36mmethod[0m=movenote 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/copyNote action:Note.CopyNote  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.copynote [36mcontroller[0m=note [36mmethod[0m=copynote 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.copynote for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/copyNote", Action:"Note.CopyNote", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/copyNote", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:36}   [36msection[0m=router [36mactionPath[0m=note.copynote [36mcontroller[0m=note [36mmethod[0m=copynote 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.copynote for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/copyNote", Action:"Note.CopyNote", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/copyNote", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:36}   [36msection[0m=router [36mactionPath[0m=note.copynote [36mcontroller[0m=note [36mmethod[0m=copynote 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/copySharedNote action:Note.CopySharedNote  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.copysharednote [36mcontroller[0m=note [36mmethod[0m=copysharednote 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.copysharednote for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/copySharedNote", Action:"Note.CopySharedNote", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/copySharedNote", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:37}   [36msection[0m=router [36mactionPath[0m=note.copysharednote [36mcontroller[0m=note [36mmethod[0m=copysharednote 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.copysharednote for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/copySharedNote", Action:"Note.CopySharedNote", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/copySharedNote", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:37}   [36msection[0m=router [36mactionPath[0m=note.copysharednote [36mcontroller[0m=note [36mmethod[0m=copysharednote 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/searchNoteByTags action:Note.SearchNoteByTags  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.searchnotebytags [36mcontroller[0m=note [36mmethod[0m=searchnotebytags 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.searchnotebytags for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/searchNoteByTags", Action:"Note.SearchNoteByTags", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/searchNoteByTags", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:38}   [36msection[0m=router [36mactionPath[0m=note.searchnotebytags [36mcontroller[0m=note [36mmethod[0m=searchnotebytags 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.searchnotebytags for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/searchNoteByTags", Action:"Note.SearchNoteByTags", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/searchNoteByTags", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:38}   [36msection[0m=router [36mactionPath[0m=note.searchnotebytags [36mcontroller[0m=note [36mmethod[0m=searchnotebytags 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/setNote2Blog action:Note.SetNote2Blog  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.setnote2blog [36mcontroller[0m=note [36mmethod[0m=setnote2blog 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.setnote2blog for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/setNote2Blog", Action:"Note.SetNote2Blog", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/setNote2Blog", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:39}   [36msection[0m=router [36mactionPath[0m=note.setnote2blog [36mcontroller[0m=note [36mmethod[0m=setnote2blog 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.setnote2blog for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/setNote2Blog", Action:"Note.SetNote2Blog", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/setNote2Blog", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:39}   [36msection[0m=router [36mactionPath[0m=note.setnote2blog [36mcontroller[0m=note [36mmethod[0m=setnote2blog 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/exportPdf action:Note.ExportPDF  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.exportpdf [36mcontroller[0m=note [36mmethod[0m=exportpdf 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.exportpdf for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/exportPdf", Action:"Note.ExportPDF", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/exportPdf", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:40}   [36msection[0m=router [36mactionPath[0m=note.exportpdf [36mcontroller[0m=note [36mmethod[0m=exportpdf 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.exportpdf for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/exportPdf", Action:"Note.ExportPDF", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/exportPdf", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:40}   [36msection[0m=router [36mactionPath[0m=note.exportpdf [36mcontroller[0m=note [36mmethod[0m=exportpdf 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/toPdf action:Note.ToPdf  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.topdf [36mcontroller[0m=note [36mmethod[0m=topdf 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.topdf for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/toPdf", Action:"Note.ToPdf", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/toPdf", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:41}   [36msection[0m=router [36mactionPath[0m=note.topdf [36mcontroller[0m=note [36mmethod[0m=topdf 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.topdf for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/toPdf", Action:"Note.ToPdf", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/toPdf", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:41}   [36msection[0m=router [36mactionPath[0m=note.topdf [36mcontroller[0m=note [36mmethod[0m=topdf 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/getNoteAndContentBySrc action:Note.GetNoteAndContentBySrc  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.getnoteandcontentbysrc [36mcontroller[0m=note [36mmethod[0m=getnoteandcontentbysrc 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.getnoteandcontentbysrc for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/getNoteAndContentBySrc", Action:"Note.GetNoteAndContentBySrc", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/getNoteAndContentBySrc", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:42}   [36msection[0m=router [36mactionPath[0m=note.getnoteandcontentbysrc [36mcontroller[0m=note [36mmethod[0m=getnoteandcontentbysrc 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.getnoteandcontentbysrc for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/note/getNoteAndContentBySrc", Action:"Note.GetNoteAndContentBySrc", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/note/getNoteAndContentBySrc", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:42}   [36msection[0m=router [36mactionPath[0m=note.getnoteandcontentbysrc [36mcontroller[0m=note [36mmethod[0m=getnoteandcontentbysrc 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/note/:noteId action:Note.Index  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=note.index [36mcontroller[0m=note [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path note.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/note/:noteId", Action:"Note.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/note/:noteId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:44}   [36msection[0m=router [36mactionPath[0m=note.index [36mcontroller[0m=note [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\note.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/note/:noteId", Action:"Note.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/note/:noteId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:44}   [36msection[0m=router [36mactionPath[0m=note.index [36mcontroller[0m=note [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/getLikesAndComments action:Blog.GetLikesAndComments  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.getlikesandcomments [36mcontroller[0m=blog [36mmethod[0m=getlikesandcomments 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.getlikesandcomments for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/getLikesAndComments", Action:"Blog.GetLikesAndComments", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/getLikesAndComments", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:48}   [36msection[0m=router [36mactionPath[0m=blog.getlikesandcomments [36mcontroller[0m=blog [36mmethod[0m=getlikesandcomments 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.getlikesandcomments for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/getLikesAndComments", Action:"Blog.GetLikesAndComments", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/getLikesAndComments", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:48}   [36msection[0m=router [36mactionPath[0m=blog.getlikesandcomments [36mcontroller[0m=blog [36mmethod[0m=getlikesandcomments 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/getLikes action:Blog.GetLikes  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.getlikes [36mcontroller[0m=blog [36mmethod[0m=getlikes 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.getlikes for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/getLikes", Action:"Blog.GetLikes", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/getLikes", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:49}   [36msection[0m=router [36mactionPath[0m=blog.getlikes [36mcontroller[0m=blog [36mmethod[0m=getlikes 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.getlikes for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/getLikes", Action:"Blog.GetLikes", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/getLikes", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:49}   [36msection[0m=router [36mactionPath[0m=blog.getlikes [36mcontroller[0m=blog [36mmethod[0m=getlikes 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/incReadNum action:Blog.IncReadNum  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.increadnum [36mcontroller[0m=blog [36mmethod[0m=increadnum 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.increadnum for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/blog/incReadNum", Action:"Blog.IncReadNum", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/blog/incReadNum", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:50}   [36msection[0m=router [36mactionPath[0m=blog.increadnum [36mcontroller[0m=blog [36mmethod[0m=increadnum 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.increadnum for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/blog/incReadNum", Action:"Blog.IncReadNum", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/blog/incReadNum", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:50}   [36msection[0m=router [36mactionPath[0m=blog.increadnum [36mcontroller[0m=blog [36mmethod[0m=increadnum 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/likePost action:Blog.LikePost  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.likepost [36mcontroller[0m=blog [36mmethod[0m=likepost 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.likepost for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/blog/likePost", Action:"Blog.LikePost", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/blog/likePost", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:51}   [36msection[0m=router [36mactionPath[0m=blog.likepost [36mcontroller[0m=blog [36mmethod[0m=likepost 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.likepost for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/blog/likePost", Action:"Blog.LikePost", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/blog/likePost", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:51}   [36msection[0m=router [36mactionPath[0m=blog.likepost [36mcontroller[0m=blog [36mmethod[0m=likepost 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/likeComment action:Blog.LikeComment  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.likecomment [36mcontroller[0m=blog [36mmethod[0m=likecomment 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.likecomment for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/blog/likeComment", Action:"Blog.LikeComment", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/blog/likeComment", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:52}   [36msection[0m=router [36mactionPath[0m=blog.likecomment [36mcontroller[0m=blog [36mmethod[0m=likecomment 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.likecomment for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/blog/likeComment", Action:"Blog.LikeComment", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/blog/likeComment", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:52}   [36msection[0m=router [36mactionPath[0m=blog.likecomment [36mcontroller[0m=blog [36mmethod[0m=likecomment 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/deleteComment action:Blog.DeleteComment  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.deletecomment [36mcontroller[0m=blog [36mmethod[0m=deletecomment 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.deletecomment for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/blog/deleteComment", Action:"Blog.DeleteComment", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/blog/deleteComment", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:53}   [36msection[0m=router [36mactionPath[0m=blog.deletecomment [36mcontroller[0m=blog [36mmethod[0m=deletecomment 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.deletecomment for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/blog/deleteComment", Action:"Blog.DeleteComment", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/blog/deleteComment", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:53}   [36msection[0m=router [36mactionPath[0m=blog.deletecomment [36mcontroller[0m=blog [36mmethod[0m=deletecomment 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/getComments action:Blog.GetComments  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.getcomments [36mcontroller[0m=blog [36mmethod[0m=getcomments 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.getcomments for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/getComments", Action:"Blog.GetComments", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/getComments", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:54}   [36msection[0m=router [36mactionPath[0m=blog.getcomments [36mcontroller[0m=blog [36mmethod[0m=getcomments 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.getcomments for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/getComments", Action:"Blog.GetComments", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/getComments", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:54}   [36msection[0m=router [36mactionPath[0m=blog.getcomments [36mcontroller[0m=blog [36mmethod[0m=getcomments 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/commentPost action:Blog.CommentPost  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.commentpost [36mcontroller[0m=blog [36mmethod[0m=commentpost 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.commentpost for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/blog/commentPost", Action:"Blog.CommentPost", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/blog/commentPost", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:55}   [36msection[0m=router [36mactionPath[0m=blog.commentpost [36mcontroller[0m=blog [36mmethod[0m=commentpost 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.commentpost for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/blog/commentPost", Action:"Blog.CommentPost", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/blog/commentPost", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:55}   [36msection[0m=router [36mactionPath[0m=blog.commentpost [36mcontroller[0m=blog [36mmethod[0m=commentpost 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/getPostStat action:Blog.GetPostStat  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.getpoststat [36mcontroller[0m=blog [36mmethod[0m=getpoststat 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.getpoststat for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/getPostStat", Action:"Blog.GetPostStat", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/getPostStat", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:56}   [36msection[0m=router [36mactionPath[0m=blog.getpoststat [36mcontroller[0m=blog [36mmethod[0m=getpoststat 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.getpoststat for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/getPostStat", Action:"Blog.GetPostStat", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/getPostStat", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:56}   [36msection[0m=router [36mactionPath[0m=blog.getpoststat [36mcontroller[0m=blog [36mmethod[0m=getpoststat 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/tags/:userIdOrEmail action:Blog.Tags  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.tags [36mcontroller[0m=blog [36mmethod[0m=tags 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.tags for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/tags/:userIdOrEmail", Action:"Blog.Tags", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/tags/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:59}   [36msection[0m=router [36mactionPath[0m=blog.tags [36mcontroller[0m=blog [36mmethod[0m=tags 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.tags for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/tags/:userIdOrEmail", Action:"Blog.Tags", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/tags/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:59}   [36msection[0m=router [36mactionPath[0m=blog.tags [36mcontroller[0m=blog [36mmethod[0m=tags 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/tags action:Blog.Tags  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.tags [36mcontroller[0m=blog [36mmethod[0m=tags 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.tags for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/tags", Action:"Blog.Tags", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/tags", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:60}   [36msection[0m=router [36mactionPath[0m=blog.tags [36mcontroller[0m=blog [36mmethod[0m=tags 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.tags for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/tags", Action:"Blog.Tags", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/tags", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:60}   [36msection[0m=router [36mactionPath[0m=blog.tags [36mcontroller[0m=blog [36mmethod[0m=tags 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/tag/:userIdOrEmail/:tag action:Blog.Tag  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.tag [36mcontroller[0m=blog [36mmethod[0m=tag 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.tag for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/tag/:userIdOrEmail/:tag", Action:"Blog.Tag", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/tag/:userIdOrEmail/:tag", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:62}   [36msection[0m=router [36mactionPath[0m=blog.tag [36mcontroller[0m=blog [36mmethod[0m=tag 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.tag for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/tag/:userIdOrEmail/:tag", Action:"Blog.Tag", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/tag/:userIdOrEmail/:tag", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:62}   [36msection[0m=router [36mactionPath[0m=blog.tag [36mcontroller[0m=blog [36mmethod[0m=tag 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/tag/:tag action:Blog.Tag  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.tag [36mcontroller[0m=blog [36mmethod[0m=tag 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.tag for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/tag/:tag", Action:"Blog.Tag", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/tag/:tag", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:63}   [36msection[0m=router [36mactionPath[0m=blog.tag [36mcontroller[0m=blog [36mmethod[0m=tag 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.tag for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/tag/:tag", Action:"Blog.Tag", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/tag/:tag", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:63}   [36msection[0m=router [36mactionPath[0m=blog.tag [36mcontroller[0m=blog [36mmethod[0m=tag 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/search/:userIdOrEmail action:Blog.Search  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.search [36mcontroller[0m=blog [36mmethod[0m=search 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.search for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/search/:userIdOrEmail", Action:"Blog.Search", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/search/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:65}   [36msection[0m=router [36mactionPath[0m=blog.search [36mcontroller[0m=blog [36mmethod[0m=search 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.search for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/search/:userIdOrEmail", Action:"Blog.Search", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/search/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:65}   [36msection[0m=router [36mactionPath[0m=blog.search [36mcontroller[0m=blog [36mmethod[0m=search 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/search action:Blog.Search  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.search [36mcontroller[0m=blog [36mmethod[0m=search 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.search for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/search", Action:"Blog.Search", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/search", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:66}   [36msection[0m=router [36mactionPath[0m=blog.search [36mcontroller[0m=blog [36mmethod[0m=search 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.search for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/search", Action:"Blog.Search", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/search", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:66}   [36msection[0m=router [36mactionPath[0m=blog.search [36mcontroller[0m=blog [36mmethod[0m=search 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/archives/:userIdOrEmail action:Blog.Archives  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.archives [36mcontroller[0m=blog [36mmethod[0m=archives 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.archives for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/archives/:userIdOrEmail", Action:"Blog.Archives", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/archives/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:68}   [36msection[0m=router [36mactionPath[0m=blog.archives [36mcontroller[0m=blog [36mmethod[0m=archives 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.archives for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/archives/:userIdOrEmail", Action:"Blog.Archives", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/archives/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:68}   [36msection[0m=router [36mactionPath[0m=blog.archives [36mcontroller[0m=blog [36mmethod[0m=archives 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/archives action:Blog.Archives  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.archives [36mcontroller[0m=blog [36mmethod[0m=archives 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.archives for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/archives", Action:"Blog.Archives", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/archives", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:69}   [36msection[0m=router [36mactionPath[0m=blog.archives [36mcontroller[0m=blog [36mmethod[0m=archives 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.archives for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/archives", Action:"Blog.Archives", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/archives", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:69}   [36msection[0m=router [36mactionPath[0m=blog.archives [36mcontroller[0m=blog [36mmethod[0m=archives 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/post/:noteId action:Blog.Post  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.post [36mcontroller[0m=blog [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.post for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/post/:noteId", Action:"Blog.Post", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/post/:noteId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:71}   [36msection[0m=router [36mactionPath[0m=blog.post [36mcontroller[0m=blog [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.post for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/post/:noteId", Action:"Blog.Post", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/post/:noteId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:71}   [36msection[0m=router [36mactionPath[0m=blog.post [36mcontroller[0m=blog [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/post/:userIdOrEmail/:noteId action:Blog.Post  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.post [36mcontroller[0m=blog [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.post for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/post/:userIdOrEmail/:noteId", Action:"Blog.Post", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/post/:userIdOrEmail/:noteId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:72}   [36msection[0m=router [36mactionPath[0m=blog.post [36mcontroller[0m=blog [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.post for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/post/:userIdOrEmail/:noteId", Action:"Blog.Post", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/post/:userIdOrEmail/:noteId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:72}   [36msection[0m=router [36mactionPath[0m=blog.post [36mcontroller[0m=blog [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/view/:noteId action:Blog.Post  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.post [36mcontroller[0m=blog [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.post for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/view/:noteId", Action:"Blog.Post", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/view/:noteId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:73}   [36msection[0m=router [36mactionPath[0m=blog.post [36mcontroller[0m=blog [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.post for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/view/:noteId", Action:"Blog.Post", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/view/:noteId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:73}   [36msection[0m=router [36mactionPath[0m=blog.post [36mcontroller[0m=blog [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/single/:userIdOrEmail/:singleId action:Blog.Single  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.single [36mcontroller[0m=blog [36mmethod[0m=single 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.single for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/single/:userIdOrEmail/:singleId", Action:"Blog.Single", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/single/:userIdOrEmail/:singleId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:75}   [36msection[0m=router [36mactionPath[0m=blog.single [36mcontroller[0m=blog [36mmethod[0m=single 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.single for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/single/:userIdOrEmail/:singleId", Action:"Blog.Single", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/single/:userIdOrEmail/:singleId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:75}   [36msection[0m=router [36mactionPath[0m=blog.single [36mcontroller[0m=blog [36mmethod[0m=single 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/single/:singleId action:Blog.Single  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.single [36mcontroller[0m=blog [36mmethod[0m=single 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.single for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/single/:singleId", Action:"Blog.Single", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/single/:singleId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:76}   [36msection[0m=router [36mactionPath[0m=blog.single [36mcontroller[0m=blog [36mmethod[0m=single 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.single for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/single/:singleId", Action:"Blog.Single", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/single/:singleId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:76}   [36msection[0m=router [36mactionPath[0m=blog.single [36mcontroller[0m=blog [36mmethod[0m=single 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/cate/:notebookId action:Blog.Cate  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.cate [36mcontroller[0m=blog [36mmethod[0m=cate 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.cate for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/cate/:notebookId", Action:"Blog.Cate", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/cate/:notebookId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:78}   [36msection[0m=router [36mactionPath[0m=blog.cate [36mcontroller[0m=blog [36mmethod[0m=cate 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.cate for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/cate/:notebookId", Action:"Blog.Cate", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/cate/:notebookId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:78}   [36msection[0m=router [36mactionPath[0m=blog.cate [36mcontroller[0m=blog [36mmethod[0m=cate 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/cate/:userIdOrEmail/:notebookId action:Blog.Cate  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.cate [36mcontroller[0m=blog [36mmethod[0m=cate 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.cate for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/cate/:userIdOrEmail/:notebookId", Action:"Blog.Cate", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/cate/:userIdOrEmail/:notebookId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:79}   [36msection[0m=router [36mactionPath[0m=blog.cate [36mcontroller[0m=blog [36mmethod[0m=cate 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.cate for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/cate/:userIdOrEmail/:notebookId", Action:"Blog.Cate", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/cate/:userIdOrEmail/:notebookId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:79}   [36msection[0m=router [36mactionPath[0m=blog.cate [36mcontroller[0m=blog [36mmethod[0m=cate 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/listCateLatest/:notebookId action:Blog.ListCateLatest  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.listcatelatest [36mcontroller[0m=blog [36mmethod[0m=listcatelatest 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.listcatelatest for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/listCateLatest/:notebookId", Action:"Blog.ListCateLatest", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/listCateLatest/:notebookId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:81}   [36msection[0m=router [36mactionPath[0m=blog.listcatelatest [36mcontroller[0m=blog [36mmethod[0m=listcatelatest 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.listcatelatest for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/listCateLatest/:notebookId", Action:"Blog.ListCateLatest", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/listCateLatest/:notebookId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:81}   [36msection[0m=router [36mactionPath[0m=blog.listcatelatest [36mcontroller[0m=blog [36mmethod[0m=listcatelatest 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/:userIdOrEmail action:Blog.Index  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.index [36mcontroller[0m=blog [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/:userIdOrEmail", Action:"Blog.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:82}   [36msection[0m=router [36mactionPath[0m=blog.index [36mcontroller[0m=blog [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/:userIdOrEmail", Action:"Blog.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:82}   [36msection[0m=router [36mactionPath[0m=blog.index [36mcontroller[0m=blog [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog action:Blog.Index  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.index [36mcontroller[0m=blog [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog", Action:"Blog.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:83}   [36msection[0m=router [36mactionPath[0m=blog.index [36mcontroller[0m=blog [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog", Action:"Blog.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:83}   [36msection[0m=router [36mactionPath[0m=blog.index [36mcontroller[0m=blog [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/blog/* action:Blog.E  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=blog.e [36mcontroller[0m=blog [36mmethod[0m=e 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path blog.e for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/*", Action:"Blog.E", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/*", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:84}   [36msection[0m=router [36mactionPath[0m=blog.e [36mcontroller[0m=blog [36mmethod[0m=e 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\blog.e for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/blog/*", Action:"Blog.E", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/blog/*", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:84}   [36msection[0m=router [36mactionPath[0m=blog.e [36mcontroller[0m=blog [36mmethod[0m=e 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/tags/:userIdOrEmail action:Preview.Tags  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.tags [36mcontroller[0m=preview [36mmethod[0m=tags 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.tags for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/tags/:userIdOrEmail", Action:"Preview.Tags", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/tags/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:88}   [36msection[0m=router [36mactionPath[0m=preview.tags [36mcontroller[0m=preview [36mmethod[0m=tags 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.tags for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/tags/:userIdOrEmail", Action:"Preview.Tags", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/tags/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:88}   [36msection[0m=router [36mactionPath[0m=preview.tags [36mcontroller[0m=preview [36mmethod[0m=tags 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/tags action:Preview.Tags  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.tags [36mcontroller[0m=preview [36mmethod[0m=tags 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.tags for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/tags", Action:"Preview.Tags", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/tags", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:89}   [36msection[0m=router [36mactionPath[0m=preview.tags [36mcontroller[0m=preview [36mmethod[0m=tags 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.tags for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/tags", Action:"Preview.Tags", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/tags", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:89}   [36msection[0m=router [36mactionPath[0m=preview.tags [36mcontroller[0m=preview [36mmethod[0m=tags 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/tag/:userIdOrEmail/:tag action:Preview.Tag  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.tag [36mcontroller[0m=preview [36mmethod[0m=tag 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.tag for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/tag/:userIdOrEmail/:tag", Action:"Preview.Tag", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/tag/:userIdOrEmail/:tag", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:91}   [36msection[0m=router [36mactionPath[0m=preview.tag [36mcontroller[0m=preview [36mmethod[0m=tag 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.tag for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/tag/:userIdOrEmail/:tag", Action:"Preview.Tag", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/tag/:userIdOrEmail/:tag", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:91}   [36msection[0m=router [36mactionPath[0m=preview.tag [36mcontroller[0m=preview [36mmethod[0m=tag 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/tag/:tag action:Preview.Tag  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.tag [36mcontroller[0m=preview [36mmethod[0m=tag 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.tag for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/tag/:tag", Action:"Preview.Tag", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/tag/:tag", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:92}   [36msection[0m=router [36mactionPath[0m=preview.tag [36mcontroller[0m=preview [36mmethod[0m=tag 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.tag for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/tag/:tag", Action:"Preview.Tag", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/tag/:tag", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:92}   [36msection[0m=router [36mactionPath[0m=preview.tag [36mcontroller[0m=preview [36mmethod[0m=tag 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/search/:userIdOrEmail action:Preview.Search  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.search [36mcontroller[0m=preview [36mmethod[0m=search 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.search for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/search/:userIdOrEmail", Action:"Preview.Search", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/search/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:94}   [36msection[0m=router [36mactionPath[0m=preview.search [36mcontroller[0m=preview [36mmethod[0m=search 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.search for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/search/:userIdOrEmail", Action:"Preview.Search", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/search/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:94}   [36msection[0m=router [36mactionPath[0m=preview.search [36mcontroller[0m=preview [36mmethod[0m=search 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/search action:Preview.Search  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.search [36mcontroller[0m=preview [36mmethod[0m=search 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.search for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/search", Action:"Preview.Search", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/search", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:95}   [36msection[0m=router [36mactionPath[0m=preview.search [36mcontroller[0m=preview [36mmethod[0m=search 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.search for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/search", Action:"Preview.Search", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/search", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:95}   [36msection[0m=router [36mactionPath[0m=preview.search [36mcontroller[0m=preview [36mmethod[0m=search 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/archives/:userIdOrEmail action:Preview.Archives  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.archives [36mcontroller[0m=preview [36mmethod[0m=archives 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.archives for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/archives/:userIdOrEmail", Action:"Preview.Archives", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/archives/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:97}   [36msection[0m=router [36mactionPath[0m=preview.archives [36mcontroller[0m=preview [36mmethod[0m=archives 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.archives for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/archives/:userIdOrEmail", Action:"Preview.Archives", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/archives/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:97}   [36msection[0m=router [36mactionPath[0m=preview.archives [36mcontroller[0m=preview [36mmethod[0m=archives 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/archives action:Preview.Archives  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.archives [36mcontroller[0m=preview [36mmethod[0m=archives 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.archives for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/archives", Action:"Preview.Archives", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/archives", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:98}   [36msection[0m=router [36mactionPath[0m=preview.archives [36mcontroller[0m=preview [36mmethod[0m=archives 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.archives for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/archives", Action:"Preview.Archives", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/archives", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:98}   [36msection[0m=router [36mactionPath[0m=preview.archives [36mcontroller[0m=preview [36mmethod[0m=archives 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/view/:noteId action:Preview.Post  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.post [36mcontroller[0m=preview [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.post for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/view/:noteId", Action:"Preview.Post", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/view/:noteId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:100}   [36msection[0m=router [36mactionPath[0m=preview.post [36mcontroller[0m=preview [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.post for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/view/:noteId", Action:"Preview.Post", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/view/:noteId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:100}   [36msection[0m=router [36mactionPath[0m=preview.post [36mcontroller[0m=preview [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/post/:noteId action:Preview.Post  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.post [36mcontroller[0m=preview [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.post for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/post/:noteId", Action:"Preview.Post", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/post/:noteId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:102}   [36msection[0m=router [36mactionPath[0m=preview.post [36mcontroller[0m=preview [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.post for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/post/:noteId", Action:"Preview.Post", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/post/:noteId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:102}   [36msection[0m=router [36mactionPath[0m=preview.post [36mcontroller[0m=preview [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/post/:userIdOrEmail/:noteId action:Preview.Post  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.post [36mcontroller[0m=preview [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.post for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/post/:userIdOrEmail/:noteId", Action:"Preview.Post", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/post/:userIdOrEmail/:noteId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:103}   [36msection[0m=router [36mactionPath[0m=preview.post [36mcontroller[0m=preview [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.post for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/post/:userIdOrEmail/:noteId", Action:"Preview.Post", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/post/:userIdOrEmail/:noteId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:103}   [36msection[0m=router [36mactionPath[0m=preview.post [36mcontroller[0m=preview [36mmethod[0m=post 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/single/:userIdOrEmail/:singleId action:Preview.Single  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.single [36mcontroller[0m=preview [36mmethod[0m=single 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.single for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/single/:userIdOrEmail/:singleId", Action:"Preview.Single", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/single/:userIdOrEmail/:singleId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:105}   [36msection[0m=router [36mactionPath[0m=preview.single [36mcontroller[0m=preview [36mmethod[0m=single 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.single for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/single/:userIdOrEmail/:singleId", Action:"Preview.Single", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/single/:userIdOrEmail/:singleId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:105}   [36msection[0m=router [36mactionPath[0m=preview.single [36mcontroller[0m=preview [36mmethod[0m=single 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/single/:singleId action:Preview.Single  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.single [36mcontroller[0m=preview [36mmethod[0m=single 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.single for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/single/:singleId", Action:"Preview.Single", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/single/:singleId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:106}   [36msection[0m=router [36mactionPath[0m=preview.single [36mcontroller[0m=preview [36mmethod[0m=single 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.single for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/single/:singleId", Action:"Preview.Single", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/single/:singleId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:106}   [36msection[0m=router [36mactionPath[0m=preview.single [36mcontroller[0m=preview [36mmethod[0m=single 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/cate/:notebookId action:Preview.Cate  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.cate [36mcontroller[0m=preview [36mmethod[0m=cate 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.cate for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/cate/:notebookId", Action:"Preview.Cate", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/cate/:notebookId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:108}   [36msection[0m=router [36mactionPath[0m=preview.cate [36mcontroller[0m=preview [36mmethod[0m=cate 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.cate for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/cate/:notebookId", Action:"Preview.Cate", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/cate/:notebookId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:108}   [36msection[0m=router [36mactionPath[0m=preview.cate [36mcontroller[0m=preview [36mmethod[0m=cate 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/cate/:userIdOrEmail/:notebookId action:Preview.Cate  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.cate [36mcontroller[0m=preview [36mmethod[0m=cate 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.cate for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/cate/:userIdOrEmail/:notebookId", Action:"Preview.Cate", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/cate/:userIdOrEmail/:notebookId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:109}   [36msection[0m=router [36mactionPath[0m=preview.cate [36mcontroller[0m=preview [36mmethod[0m=cate 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.cate for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/cate/:userIdOrEmail/:notebookId", Action:"Preview.Cate", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/cate/:userIdOrEmail/:notebookId", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:109}   [36msection[0m=router [36mactionPath[0m=preview.cate [36mcontroller[0m=preview [36mmethod[0m=cate 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview/:userIdOrEmail action:Preview.Index  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.index [36mcontroller[0m=preview [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/:userIdOrEmail", Action:"Preview.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:111}   [36msection[0m=router [36mactionPath[0m=preview.index [36mcontroller[0m=preview [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview/:userIdOrEmail", Action:"Preview.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview/:userIdOrEmail", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:111}   [36msection[0m=router [36mactionPath[0m=preview.index [36mcontroller[0m=preview [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/preview action:Preview.Index  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=preview.index [36mcontroller[0m=preview [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path preview.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview", Action:"Preview.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:112}   [36msection[0m=router [36mactionPath[0m=preview.index [36mcontroller[0m=preview [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\preview.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/preview", Action:"Preview.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/GET/preview", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:112}   [36msection[0m=router [36mactionPath[0m=preview.index [36mcontroller[0m=preview [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/favicon.ico action:Static.Serve  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path static.serve(public/images/favicon.ico) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/favicon.ico", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/images/favicon.ico"}, TreePath:"/GET/favicon.ico", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:115}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\static.serve(public/images/favicon.ico) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/favicon.ico", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/images/favicon.ico"}, TreePath:"/GET/favicon.ico", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:115}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/public/*filepath action:Static.Serve  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path static.serve(public) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/public/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public"}, TreePath:"/GET/public/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:116}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\static.serve(public) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/public/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public"}, TreePath:"/GET/public/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:116}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/js/*filepath action:Static.Serve  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path static.serve(public/js) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/js/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/js"}, TreePath:"/GET/js/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:117}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\static.serve(public/js) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/js/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/js"}, TreePath:"/GET/js/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:117}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/images/*filepath action:Static.Serve  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path static.serve(public/images) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/images/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/images"}, TreePath:"/GET/images/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:118}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\static.serve(public/images) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/images/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/images"}, TreePath:"/GET/images/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:118}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/img/*filepath action:Static.Serve  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path static.serve(public/img) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/img/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/img"}, TreePath:"/GET/img/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:119}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\static.serve(public/img) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/img/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/img"}, TreePath:"/GET/img/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:119}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/css/*filepath action:Static.Serve  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path static.serve(public/css) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/css/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/css"}, TreePath:"/GET/css/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:120}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\static.serve(public/css) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/css/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/css"}, TreePath:"/GET/css/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:120}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/fonts/*filepath action:Static.Serve  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path static.serve(public/fonts) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/fonts/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/fonts"}, TreePath:"/GET/fonts/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:121}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\static.serve(public/fonts) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/fonts/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/fonts"}, TreePath:"/GET/fonts/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:121}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/tinymce/*filepath action:Static.Serve  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path static.serve(public/tinymce) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/tinymce/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/tinymce"}, TreePath:"/GET/tinymce/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:122}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\static.serve(public/tinymce) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/tinymce/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/tinymce"}, TreePath:"/GET/tinymce/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:122}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/upload/*filepath action:Static.Serve  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path static.serve(public/upload) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/upload/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/upload"}, TreePath:"/GET/upload/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:124}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\static.serve(public/upload) for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"GET", Path:"/upload/*filepath", Action:"Static.Serve", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string{"public/upload"}, TreePath:"/GET/upload/*filepath", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:124}   [36msection[0m=router [36mactionPath[0m=static.serve [36mcontroller[0m=static [36mmethod[0m=serve 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/member action:MemberIndex.Index  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=memberindex.index [36mcontroller[0m=memberindex [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path memberindex.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member", Action:"MemberIndex.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:128}   [36msection[0m=router [36mactionPath[0m=memberindex.index [36mcontroller[0m=memberindex [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\memberindex.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member", Action:"MemberIndex.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:128}   [36msection[0m=router [36mactionPath[0m=memberindex.index [36mcontroller[0m=memberindex [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/member/index action:MemberIndex.Index  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=memberindex.index [36mcontroller[0m=memberindex [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path memberindex.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member/index", Action:"MemberIndex.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member/index", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:129}   [36msection[0m=router [36mactionPath[0m=memberindex.index [36mcontroller[0m=memberindex [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\memberindex.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member/index", Action:"MemberIndex.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member/index", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:129}   [36msection[0m=router [36mactionPath[0m=memberindex.index [36mcontroller[0m=memberindex [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/member/group/index action:MemberGroup.Index  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=membergroup.index [36mcontroller[0m=membergroup [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path membergroup.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member/group/index", Action:"MemberGroup.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member/group/index", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:132}   [36msection[0m=router [36mactionPath[0m=membergroup.index [36mcontroller[0m=membergroup [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\membergroup.index for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member/group/index", Action:"MemberGroup.Index", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member/group/index", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:132}   [36msection[0m=router [36mactionPath[0m=membergroup.index [36mcontroller[0m=membergroup [36mmethod[0m=index 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/member/group/addGroup action:MemberGroup.AddGroup  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=membergroup.addgroup [36mcontroller[0m=membergroup [36mmethod[0m=addgroup 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path membergroup.addgroup for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member/group/addGroup", Action:"MemberGroup.AddGroup", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member/group/addGroup", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:133}   [36msection[0m=router [36mactionPath[0m=membergroup.addgroup [36mcontroller[0m=membergroup [36mmethod[0m=addgroup 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\membergroup.addgroup for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member/group/addGroup", Action:"MemberGroup.AddGroup", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member/group/addGroup", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:133}   [36msection[0m=router [36mactionPath[0m=membergroup.addgroup [36mcontroller[0m=membergroup [36mmethod[0m=addgroup 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/member/group/updateGroupTitle action:MemberGroup.UpdateGroupTitle  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=membergroup.updategrouptitle [36mcontroller[0m=membergroup [36mmethod[0m=updategrouptitle 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path membergroup.updategrouptitle for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member/group/updateGroupTitle", Action:"MemberGroup.UpdateGroupTitle", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member/group/updateGroupTitle", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:134}   [36msection[0m=router [36mactionPath[0m=membergroup.updategrouptitle [36mcontroller[0m=membergroup [36mmethod[0m=updategrouptitle 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\membergroup.updategrouptitle for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member/group/updateGroupTitle", Action:"MemberGroup.UpdateGroupTitle", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member/group/updateGroupTitle", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:134}   [36msection[0m=router [36mactionPath[0m=membergroup.updategrouptitle [36mcontroller[0m=membergroup [36mmethod[0m=updategrouptitle 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/member/group/deleteGroup action:MemberGroup.DeleteGroup  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=membergroup.deletegroup [36mcontroller[0m=membergroup [36mmethod[0m=deletegroup 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path membergroup.deletegroup for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member/group/deleteGroup", Action:"MemberGroup.DeleteGroup", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member/group/deleteGroup", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:135}   [36msection[0m=router [36mactionPath[0m=membergroup.deletegroup [36mcontroller[0m=membergroup [36mmethod[0m=deletegroup 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\membergroup.deletegroup for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member/group/deleteGroup", Action:"MemberGroup.DeleteGroup", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member/group/deleteGroup", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:135}   [36msection[0m=router [36mactionPath[0m=membergroup.deletegroup [36mcontroller[0m=membergroup [36mmethod[0m=deletegroup 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/member/group/addUser action:MemberGroup.AddUser  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=membergroup.adduser [36mcontroller[0m=membergroup [36mmethod[0m=adduser 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path membergroup.adduser for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member/group/addUser", Action:"MemberGroup.AddUser", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member/group/addUser", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:136}   [36msection[0m=router [36mactionPath[0m=membergroup.adduser [36mcontroller[0m=membergroup [36mmethod[0m=adduser 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\membergroup.adduser for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member/group/addUser", Action:"MemberGroup.AddUser", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member/group/addUser", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:136}   [36msection[0m=router [36mactionPath[0m=membergroup.adduser [36mcontroller[0m=membergroup [36mmethod[0m=adduser 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/member/group/deleteUser action:MemberGroup.DeleteUser  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=membergroup.deleteuser [36mcontroller[0m=membergroup [36mmethod[0m=deleteuser 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path membergroup.deleteuser for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member/group/deleteUser", Action:"MemberGroup.DeleteUser", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member/group/deleteUser", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:137}   [36msection[0m=router [36mactionPath[0m=membergroup.deleteuser [36mcontroller[0m=membergroup [36mmethod[0m=deleteuser 
[36mDEBUG[0m 17:51:34  revel router.go:420: splitActionPath: Split Storing recognized action path app\membergroup.deleteuser for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member/group/deleteUser", Action:"MemberGroup.DeleteUser", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member/group/deleteUser", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:137}   [36msection[0m=router [36mactionPath[0m=membergroup.deleteuser [36mcontroller[0m=membergroup [36mmethod[0m=deleteuser 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/:controller/:action action::controller.:action  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=:controller.:action [36mcontroller[0m=:controller [36mmethod[0m=:action 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path :controller.:action for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/:controller/:action", Action:":controller.:action", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/:controller/:action", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:140}   [36msection[0m=router [36mactionPath[0m=:controller.:action [36mcontroller[0m=:controller [36mmethod[0m=:action 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/api/:controller/:action action::controller.:action  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=:controller.:action [36mcontroller[0m=:controller [36mmethod[0m=:action 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path :controller.:action for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/api/:controller/:action", Action:":controller.:action", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/api/:controller/:action", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:141}   [36msection[0m=router [36mactionPath[0m=:controller.:action [36mcontroller[0m=:controller [36mmethod[0m=:action 
[36mDEBUG[0m 17:51:34  revel router.go:118: NewRoute: New splitActionPath path:/member/:controller/:action action::controller.:action  [36msection[0m=router 
[36mDEBUG[0m 17:51:34  revel router.go:119: splitActionPath: Check for namespace      [36msection[0m=router [36mactionPath[0m=:controller.:action [36mcontroller[0m=:controller [36mmethod[0m=:action 
[36mDEBUG[0m 17:51:34  revel router.go:414: splitActionPath: Split Storing recognized action path :controller.:action for route  &revel.Route{ModuleSource:(*revel.Module)(0x1157ac0), Method:"*", Path:"/member/:controller/:action", Action:":controller.:action", ControllerNamespace:"", ControllerName:"", MethodName:"", FixedParams:[]string(nil), TreePath:"/:METHOD/member/:controller/:action", TypeOfController:(*revel.ControllerType)(nil), routesPath:"D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\conf\\routes", line:142}   [36msection[0m=router [36mactionPath[0m=:controller.:action [36mcontroller[0m=:controller [36mmethod[0m=:action 
[36mDEBUG[0m 17:51:34  revel  server.go:41: Refresh: Refreshing templates from        [36msection[0m=template [36mpath[0m="[D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\app\\views D:\\work\\gopath\\src\\github.com\\revel\\revel\\templates D:\\work\\gopath\\src\\github.com\\revel\\modules\\testrunner\\app\\views]" 
[36mDEBUG[0m 17:51:34  revel template_engine.go:80: CreateTemplateEngine: init templates      [36msection[0m=template [36mname[0m=go 
[36mDEBUG[0m 17:51:34  revel  server.go:41: Refresh: Refreshing templates from        [36msection[0m=template [36mpath[0m="[D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\app\\views D:\\work\\gopath\\src\\github.com\\revel\\modules\\testrunner\\app\\views D:\\work\\gopath\\src\\github.com\\revel\\revel\\templates]" 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\blog\list.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\blog\page.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\button.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\data\configuration.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\data\index.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\email\emailDialog.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\email\list.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\email\page.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\email\send.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\email\sendToUsers.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\email\set.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\email\template.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\end.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\footer.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\header.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\index.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\nav.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\setting\demo.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\setting\export_pdf.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\setting\home_page.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\setting\open_register.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\setting\shareNote.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\setting\share_note.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\setting\site_url.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\setting\upload.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\top.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\upgrade\beta2.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\upgrade\beta3.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\user\add.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\user\list.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\user\page.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\admin\user\reset_pwd.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\album\index.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\app\Index.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\blog\about_me.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\blog\comment.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\blog\footer.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\blog\header.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\blog\highlight.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\blog\index.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\blog\search.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\blog\set.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\blog\view.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\errors\404-dev.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\errors\404.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\errors\500-blog.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\errors\500-dev.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\errors\500.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\file\blog_logo.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\file\image.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\file\pdf.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\home\find_password.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\home\find_password2.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\home\find_password2_timeout.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\home\footer.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\home\header.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\home\header_box.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\home\index.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\home\index_en.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\home\index_zh.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\home\login.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\home\modal.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\home\register.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\html2Image\index.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\html2Image\test.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\blog\add_single.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\blog\base.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\blog\cate.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\blog\comment.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\blog\list.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\blog\page.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\blog\paging.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\blog\single.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\blog\theme.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\blog\update_abstract.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\blog\update_theme.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\end.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\footer.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\group\index.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\index.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\nav.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\top.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\user\add_account.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\user\avatar.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\user\email.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\user\password.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\user\username.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\member\个人中心.md  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\note\histories.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\note\note-dev.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\note\note.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\notebook\Index.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\oauth\oauth_callback_error.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\share\note_notebook_share_user_infos.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\user\account.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\user\active_email.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\leanote\leanote\app\views\user\update_email.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\modules\testrunner\app\views\TestRunner\FailureDetail.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\modules\testrunner\app\views\TestRunner\Index.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\modules\testrunner\app\views\TestRunner\SuiteResult.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\revel\templates\errors\403.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\revel\templates\errors\403.json  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\revel\templates\errors\403.txt  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\revel\templates\errors\403.xml  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:185: findAndAddTemplate: Not Loading, template is already exists:   [36msection[0m=template [36mname[0m=errors/404-dev.html [36mold[0m=D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\app\\views\\errors\\404-dev.html [36mnew[0m=D:\\work\\gopath\\src\\github.com\\revel\\revel\\templates\\errors\\404-dev.html 
[36mDEBUG[0m 17:51:34  revel template.go:185: findAndAddTemplate: Not Loading, template is already exists:   [36msection[0m=template [36mname[0m=errors/404.html [36mold[0m=D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\app\\views\\errors\\404.html [36mnew[0m=D:\\work\\gopath\\src\\github.com\\revel\\revel\\templates\\errors\\404.html 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\revel\templates\errors\404.json  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\revel\templates\errors\404.txt  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\revel\templates\errors\404.xml  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\revel\templates\errors\405.html  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\revel\templates\errors\405.json  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\revel\templates\errors\405.txt  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\revel\templates\errors\405.xml  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:185: findAndAddTemplate: Not Loading, template is already exists:   [36msection[0m=template [36mname[0m=errors/500-dev.html [36mold[0m=D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\app\\views\\errors\\500-dev.html [36mnew[0m=D:\\work\\gopath\\src\\github.com\\revel\\revel\\templates\\errors\\500-dev.html 
[36mDEBUG[0m 17:51:34  revel template.go:185: findAndAddTemplate: Not Loading, template is already exists:   [36msection[0m=template [36mname[0m=errors/500.html [36mold[0m=D:\\work\\gopath\\src\\github.com\\leanote\\leanote\\app\\views\\errors\\500.html [36mnew[0m=D:\\work\\gopath\\src\\github.com\\revel\\revel\\templates\\errors\\500.html 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\revel\templates\errors\500.json  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\revel\templates\errors\500.txt  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel template.go:330: loadIntoEngine:Engine 'go' compiled D:\work\gopath\src\github.com\revel\revel\templates\errors\500.xml  [36msection[0m=template 
[36mDEBUG[0m 17:51:34  revel server_adapter_go.go:56: Start: Listening on 0.0.0.0:53430...      [36msection[0m=server 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 20:45:26  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 18:57:05  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 19:02:00  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 19:25:02  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 14:56:56  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=album.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=blog.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=markdown.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=member.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=msg.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=note.conf 
[33mWARN [0m 23:25:11  revel   util.go:272: Ignoring file because it did not have a valid extension  [33msection[0m=i18n [33mfile[0m=tinymce_editor.conf 
